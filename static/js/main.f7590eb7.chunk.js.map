{"version":3,"sources":["elements/Buttons/Collapse/Collapse.tsx","pages/App.tsx","reportWebVitals.js","index.tsx"],"names":["Collapse","props","expandFirst","e","setState","FirstcollapsRotation","SecondcollapsRotation","expandSecond","resetAll","render","className","state","onFocus","onBlur","FirstBtnH4","FirstBtnH3","FirstBtnP","SecondBtnH4","SecondBtnH3","SecondBtnP","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"2OAgEeA,G,wDA9Cb,WAAYC,GAAuB,IAAD,8BAChC,cAAMA,IAGRC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEC,qBAAsB,OAAQC,sBAAuB,WALrC,EAQlCC,aAAe,SAACJ,GACd,EAAKC,SAAS,CAAEC,qBAAsB,QAASC,sBAAuB,UATtC,EAYlCE,SAAW,SAACL,GACV,EAAKC,SAAS,CAAEC,qBAAsB,OAAQC,sBAAuB,UAbrC,EAgBlCG,OAAS,kBACP,qBAAKC,UAAU,QAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAW,EAAKC,MAAMN,qBAA3B,SACE,qBAAKK,UAAU,WAAf,SACE,yBACEE,QAAS,SAACT,GAAD,OAAsC,EAAKD,YAAYC,IAChEU,OAAQ,SAACV,GAAD,OAAsC,EAAKK,SAASL,IAF9D,UAGE,6BAAK,EAAKF,MAAMa,aAChB,6BAAK,EAAKb,MAAMc,aAChB,4BAAI,EAAKd,MAAMe,mBAIrB,qBAAKN,UAAW,EAAKC,MAAML,sBAA3B,SACE,qBAAKI,UAAU,WAAf,SACE,yBACEE,QAAS,SAACT,GAAD,OAAsC,EAAKI,aAAaJ,IACjEU,OAAQ,SAACV,GAAD,OAAsC,EAAKK,SAASL,IAF9D,UAGE,6BAAK,EAAKF,MAAMgB,cAChB,6BAAK,EAAKhB,MAAMiB,cAChB,4BAAI,EAAKjB,MAAMkB,0BAnCzB,EAAKR,MAAQ,CAAEN,qBAAsB,OAAQC,sBAAuB,QAFpC,E,UADbc,IAAMC,YCkBdC,G,kNA7Bbb,OAAS,kBACP,qBAAKC,UAAU,UAAf,SACE,sBAAKA,UAAU,aAAf,UACE,cAAC,EAAD,CAAUI,WAAW,sBACnBC,WAAW,YACXC,UAAU,SACVC,YAAY,sBACZC,YAAY,YACZC,WAAW,aAEX,cAAC,EAAD,CAAUL,WAAW,sBACrBC,WAAW,YACXC,UAAU,SACVC,YAAY,sBACZC,YAAY,YACZC,WAAW,aAEX,cAAC,EAAD,CAAUL,WAAW,sBACrBC,WAAW,YACXC,UAAU,SACVC,YAAY,sBACZC,YAAY,YACZC,WAAW,mB,YAvBHC,IAAMC,YCOTE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASvB,OACP,cAAC,IAAMwB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f7590eb7.chunk.js","sourcesContent":["import React from \"react\";\n\nimport './Collapse.scoped.scss';\n\ninterface CollapseProps {\n  FirstBtnH4: string;\n  FirstBtnH3: string;\n  FirstBtnP: string;\n  SecondBtnH4: string;\n  SecondBtnH3: string;\n  SecondBtnP: string;\n}\ninterface CollapseState {\n  FirstcollapsRotation: string;\n  SecondcollapsRotation: string;\n}\n\nclass Collapse extends React.Component<CollapseProps, CollapseState> {\n  constructor(props: CollapseProps) {\n    super(props)\n    this.state = { FirstcollapsRotation: \"none\", SecondcollapsRotation: \"none\" }\n  }\n  expandFirst = (e: React.FocusEvent<HTMLElement>): void => {\n    this.setState({ FirstcollapsRotation: \"open\", SecondcollapsRotation: \"close\" })\n  }\n\n  expandSecond = (e: React.FocusEvent<HTMLElement>): void => {\n    this.setState({ FirstcollapsRotation: \"close\", SecondcollapsRotation: \"open\" })\n  }\n\n  resetAll = (e: React.FocusEvent<HTMLElement>): void => {\n    this.setState({ FirstcollapsRotation: \"none\", SecondcollapsRotation: \"none\" })\n  }\n\n  render = () => (\n    <div className=\"light\">\n      <div className=\"maindiv\">\n        <div className={this.state.FirstcollapsRotation}>\n          <div className=\"hoverdiv\">\n            <button\n              onFocus={(e: React.FocusEvent<HTMLElement>) => this.expandFirst(e)}\n              onBlur={(e: React.FocusEvent<HTMLElement>) => this.resetAll(e)}>\n              <h4>{this.props.FirstBtnH4}</h4>\n              <h3>{this.props.FirstBtnH3}</h3>\n              <p>{this.props.FirstBtnP}</p>\n            </button>\n          </div>\n        </div>\n        <div className={this.state.SecondcollapsRotation}>\n          <div className=\"hoverdiv\">\n            <button\n              onFocus={(e: React.FocusEvent<HTMLElement>) => this.expandSecond(e)}\n              onBlur={(e: React.FocusEvent<HTMLElement>) => this.resetAll(e)}>\n              <h4>{this.props.SecondBtnH4}</h4>\n              <h3>{this.props.SecondBtnH3}</h3>\n              <p>{this.props.SecondBtnP}</p>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Collapse;\n","import React from 'react';\nimport Collapse from '../elements/Buttons/Collapse/Collapse';\nimport './App.scoped.scss';\n\n\nclass App extends React.Component {\n  render = () => (\n    <div className=\"mainDiv\">\n      <div className=\"centralDiv\">\n        <Collapse FirstBtnH4=\"Button1: ButtonText\"\n          FirstBtnH3=\"H3:Text 1\"\n          FirstBtnP=\"P:text\"\n          SecondBtnH4=\"Button2: ButtonText\"\n          SecondBtnH3=\"H3:Text 2\"\n          SecondBtnP=\"P:text 2\"\n        />\n          <Collapse FirstBtnH4=\"Button3: ButtonText\"\n          FirstBtnH3=\"H3:Text 1\"\n          FirstBtnP=\"P:text\"\n          SecondBtnH4=\"Button4: ButtonText\"\n          SecondBtnH3=\"H3:Text 2\"\n          SecondBtnP=\"P:text 2\"\n        />\n          <Collapse FirstBtnH4=\"Button5: ButtonText\"\n          FirstBtnH3=\"H3:Text 1\"\n          FirstBtnP=\"P:text\"\n          SecondBtnH4=\"Button6: ButtonText\"\n          SecondBtnH3=\"H3:Text 2\"\n          SecondBtnP=\"P:text 2\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\n \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}